@font-face {
  font-family: "PT Sans";
  font-weight: 400;
  font-style: normal;
  src: local("PT Sans Regular"), url("../../public/fonts/ptsans.woff") format("woff"), url("../../public/fonts/ptsans.woff2") format("woff2"); }

@font-face {
  font-family: "PT Sans";
  font-weight: 700;
  font-style: normal;
  src: local("PT Sans Bold"), url("../../public/fonts/ptsansbold.woff") format("woff"), url("../../public/fonts/ptsansbold.woff2") format("woff2"); }

@import url("https://fonts.googleapis.com/css?family=Roboto");
html {
  font-size: 100%;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

*,
*::after,
*::before {
  box-sizing: border-box; }

.clearfix::after {
  content: "";
  display: table;
  clear: both; }

h1, h2, h3, h4, h5, h6, p {
  padding: 0;
  margin: 0; }

a {
  color: #fff;
  text-decoration: none;
  outline: 0; }
  a:active, a:focus, a:hover {
    color: #fff;
    text-decoration: none;
    outline: 0; }

body {
  margin: 0;
  padding: 0;
  font-family: Arial, Tahoma, sans-serif;
  line-height: 1;
  background-color: #ffffff;
  height: 100%;
  position: relative;
  font-size: 13px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.wrap-site {
  background-color: #fff;
  max-width: 1680px;
  min-height: 320px;
  margin: 0 auto;
  box-shadow: 0, 2px, 5px, #555; }

.main {
  margin: 10px 0 10px 0;
  width: 100%;
  height: auto;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
      justify-content: space-between; }

.main-footer {
  margin: 10px 0 0 0;
  height: 100px;
  background: #ccc; }

@media only screen and (max-width: 992px) {
  .main {
    width: 100%;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-flow: row wrap;
        flex-flow: row wrap; } }

/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

.contacts {
  background: green;
  outline: 1px solid black;
  width: 97%;
  margin: 5px;
  height: 700px; }

.docListFull {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-align: center;
      align-items: center;
  width: 100%; }
  .docListFull__docLine {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
        justify-content: space-between; }
  .docListFull__size {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column; }
  .docListFull__upper {
    font-size: 1.3rem; }
  .docListFull__lower {
    font-size: 1.3rem; }
  .docListFull__key_1 {
    font-size: 1.3rem;
    margin: 10px; }
  .docListFull__voice {
    font-size: 1.3rem;
    margin: 10px; }

.grid-left {
  width: 50%;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-align: center;
      align-items: center;
  height: auto; }
  .grid-left__article {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-align: center;
        align-items: center;
    height: auto;
    width: 100%;
    margin-bottom: 10%; }
  .grid-left__title {
    margin-bottom: 1rem;
    text-align: center;
    font-size: 2rem; }
  .grid-left__num {
    font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
    font-size: 1.3rem;
    text-transform: lowercase;
    vertical-align: super; }
  .grid-left__wrap {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column; }

@media only screen and (max-width: 992px) {
  .grid-left {
    width: 100%; } }

.grid-right {
  background: yellow;
  height: 700px;
  width: 50%;
  margin: 5px; }

@media only screen and (max-width: 992px) {
  .grid-right {
    width: 100%; } }

.hidden-menu {
  display: none;
  background-color: rgba(0, 0, 0, 0.8);
  width: 100%;
  height: 100%;
  position: fixed;
  z-index: 101;
  top: 0;
  left: 0;
  -ms-flex-flow: column nowrap;
      flex-flow: column nowrap;
  text-align: center; }
  .hidden-menu__list {
    margin: 0;
    padding: 0;
    height: 100%;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-flow: column nowrap;
        flex-flow: column nowrap;
    -ms-flex-pack: center;
        justify-content: center;
    -ms-flex-align: stretch;
        align-items: stretch;
    -ms-flex-line-pack: stretch;
        align-content: stretch; }
  .hidden-menu__item a {
    margin: 15px auto;
    display: block;
    color: #fff;
    font-size: 1.8rem; }
  .hidden-menu__item a:hover {
    color: green; }

@media only screen and (max-width: 992px) {
  .hidden-menu {
    display: block; } }

.line {
  width: 70%;
  background-color: #ddd;
  height: 1px;
  margin: 10px auto; }

.logo-top__wrap {
  display: block; }

.logo-top__img {
  display: block;
  cursor: pointer;
  width: 30px; }


/* Medium Devices, Desktops */
@media screen and (max-width: 992px) {
  .wrapper {
    width: 100%;
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-align: center;
        align-items: center; }
  .nav-main {
    display: none; }
  .requirements {
    width: 100%; }
  .s-chords__left {
    background: red; } }

.menu-btn {
  display: none;
  text-align: center;
  width: 60px;
  height: 60px;
  line-height: 60px;
  background-color: #fff;
  color: #ccc;
  cursor: pointer;
  position: fixed;
  right: 0;
  top: 0;
  z-index: 500;
  font-size: 1.9rem;
  transition: all 0.35s ease 0s; }
  .menu-btn:hover {
    color: #2A4C3B; }

@media only screen and (max-width: 992px) {
  .menu-btn {
    display: block; } }

.menu-icon {
  display: none; }

@media screen and (max-width: 992px) {
  .nav-main {
    display: none; }
  .menu-icon {
    display: block;
    background: #00897b;
    border: none;
    font-size: 25px;
    width: 50px;
    height: 50px;
    cursor: pointer; } }

.phone {
  font-size: 1.3rem; }

@media screen and (max-width: 768px) {
  display: none; }

.requirements {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center;
  margin: 10px auto;
  width: 50%;
  height: 200px; }
  .requirements__desk {
    font-size: 1.3rem;
    text-align: center; }

.site-header {
  background-color: rgba(0, 0, 0, 0.8);
  padding: 0;
  width: 100%;
  height: 60px;
  top: 0;
  z-index: 100;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: row nowrap;
      flex-flow: row nowrap;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-line-pack: stretch;
      align-content: stretch; }

@media screen and (max-width: 992px) {
  .site-header {
    height: 70px; } }

.top-menu__list {
  margin: 0;
  padding: 0; }

.top-menu__item {
  display: inline-block; }

.top-menu__item a {
  display: inline-block;
  margin: 0 10px;
  text-transform: uppercase;
  color: #ccc; }

.top-menu__item a:hover {
  color: #2A4C3B; }

@media only screen and (max-width: 992px) {
  .top-menu {
    display: none; } }

#toTop {
  z-index: 999;
  width: 40px;
  height: 40px;
  border: none;
  font-size: 20px;
  border-radius: 3px;
  background: #00897b;
  text-align: center;
  padding: 5px;
  position: fixed;
  bottom: 10px;
  right: 10px;
  cursor: pointer;
  display: none;
  color: #000000; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
